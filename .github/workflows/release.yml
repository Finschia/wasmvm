name: Release

on:
  push:
    branches:
      - main
      - hotfix**

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CARGO_HOME: /.cargo

jobs:
  package-version: # emit package version using `cargo tree -i`
    name: Get Package Version
    runs-on: ubuntu-latest
    container: rust:1.54.0-slim
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache cargo
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.CARGO_HOME }}/bin/
            ${{ env.CARGO_HOME }}/registry/index/
            ${{ env.CARGO_HOME }}/registry/cache/
            ${{ env.CARGO_HOME }}/git/db/
          key: ${{ runner.os }}-cargo-home-${{ hashFiles('**/Cargo.lock') }}
      - name: Get package version
        id: get-version
        working-directory: ./libwasmvm
        run: |
          VERSION=$(cargo tree -i wasmvm | grep -oE "[0-9]+(\.[0-9]+){2}-[0-9]+(\.[0-9]+){2}")
          echo ::set-output name=version::${VERSION}
  check-version: # check whether the package version exist on git tags
    name: Check Version
    needs: package-version
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.result.outputs.result }}
    steps:
      - uses: actions/checkout@v2
      - uses: dudo/tag_check@v1.1.1
        id: tag-check
        continue-on-error: true
        with:
          version: ${{ needs.package-version.outputs.version }}
          git_tag_prefix: v
      - id: result
        run: |
          RESULT=""
          if [ ${{ steps.tag-check.outcome }} == 'success' ] ; then
            RESULT=${{ steps.tag-check.outputs.git_tag_name }}
          fi
          echo ::set-output name=result::${RESULT}
  push-tag: # if the version does not exist as git tag, push it
    name: Push Tag
    needs: check-version
    if: ${{ needs.check-version.outputs.tag }}
    runs-on: ubuntu-latest
    steps:
      - name: Push Tag to GitHub
        run: |
          curl -s -H "Authorization: token ${GITHUB_TOKEN}" \
          -d "{\"ref\": \"refs/tags/${{ needs.check-version.outputs.tag }}\", \"sha\": \"${GITHUB_SHA}\"}" \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/git/refs"
